{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Loader.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","bind","ul","listStyle","margin","TodoList","props","todos","map","onToggle","Modal","state","isOpen","Fragment","setState","this","Component","AddTodo","lazy","Promise","resolve","setTimeout","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","Provider","value","filter","Suspense","fallback","Loader","onCreate","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b2c6b81.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React, {useContext} from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Context from '../context'\r\n\r\nconst styles = {\r\n    li: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '.5rem 1rem',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '4px',\r\n        marginBottom: '.5rem'\r\n    },\r\n    input: {\r\n        marginRight: '1rem'\r\n    }\r\n}\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n    const { removeTodo } = useContext(Context)\r\n    const classes = []\r\n\r\n    if (todo.completed) {\r\n        classes.push('done')\r\n    }\r\n\r\n    return (\r\n      <li style={styles.li}>\r\n      <span className={classes.join(' ')}>\r\n          <input \r\n           type=\"checkbox\"\r\n           checked={todo.completed} \r\n           style={styles.input} \r\n           onChange={()=> onChange(todo.id)}\r\n            />\r\n          <strong>{index+1}</strong>\r\n          &nbsp;\r\n          {todo.title}\r\n      </span>\r\n\r\n      <button className=\"rm\" onClick={removeTodo.bind(null, todo.id)}>&times;</button>\r\n        \r\n      </li>\r\n    )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst styles = {\r\n    ul: {\r\n        listStyle: 'none',\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n            { props.todos.map((todo, index) => {\r\n                return <TodoItem todo={todo} key={todo.id} index={index} onChange={props.onToggle}/>\r\n            }) }    \r\n        </ul>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onToggle: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList","import React from \"react\";\r\n\r\nexport default () => (\r\n<div style={{ display: 'flex', justifyContent: 'center', margin: '.5rem'}}>\r\n  <div className=\"lds-dual-ring\" />\r\n</div>\r\n)","import React from \"react\";\r\nimport './Modal.css'\r\n\r\nexport default class Modal extends React.Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button onClick={() => this.setState({ isOpen: true})}>What is it? Что это?</button>\r\n\r\n                {this.state.isOpen && <div className='modal'>\r\n                    <div className='modal-body'>\r\n                        <h1>Список Дел или To Do List</h1>\r\n                        <p>Это первый проект который я написал на Reactjs \"ToDo List\", \"Список Дел\".\r\n                        Здесь вы можете добавлять, вычеркивать завершенные и удалять дела, задачи и пр. </p>\r\n                        <button onClick={() => this.setState({ isOpen: false})}>Закрыть окно</button>\r\n                    </div>\r\n                </div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { useEffect } from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\nimport Loader from \"./Loader\";\nimport Modal from \"./Modal/Modal\";\n\nconst AddTodo = React.lazy(() => new Promise(resolve => {\n  setTimeout(() => {\n    resolve(import('./Todo/AddTodo'))\n  }, 3000)\n}))\n\nfunction App() {\n  const [todos, setTodos] = React.useState([])\n  const [loading, setLoading] = React.useState(true)\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n  .then(response => response.json())\n  .then(todos => {\n    setTimeout(() => {\n    setTodos(todos)\n    setLoading(false)\n    }, 2000)\n    \n  })\n  }, [])\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo\n      })\n    )\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  function addTodo(title) {\n    setTodos(todos.concat([\n      {\n        title,\n        id: Date.now(),\n        completed: false\n      }\n     ])\n    )\n  }\n  \n  return (\n    <Context.Provider value={{ removeTodo }}>\n    <div className='wrapper'>\n      <h1>To Do List (Список дел)</h1>\n      <Modal />\n\n      <React.Suspense fallback={<Loader />}>\n       <AddTodo onCreate={addTodo}/>\n      </React.Suspense>\n      \n      {loading && <Loader />}\n      {todos.length ? (\n        <TodoList todos={todos} onToggle={toggleTodo} /> \n      ) : (\n       loading ? null : (\n        <p>No todos! (Нет дел!)</p>\n       )\n      )}\n    </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}